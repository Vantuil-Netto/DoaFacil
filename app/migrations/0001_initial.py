# Generated by Django 5.1.5 on 2025-02-04 02:45

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoriaItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Categoria',
                'verbose_name_plural': 'Categorias',
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, unique=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Tipo de usuário',
                'verbose_name_plural': 'Tipos de usuários',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('tipo_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tipousuario', verbose_name='Tipo de usuário')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('data_disponibilidade', models.DateTimeField(auto_now_add=True, verbose_name='Data de disponibilidade')),
                ('status', models.CharField(choices=[('Disponível', 'Disponível'), ('Doado', 'Doado')], default='Disponível', max_length=20, verbose_name='Status')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.categoriaitem', verbose_name='Categoria')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='itens', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Item',
                'verbose_name_plural': 'Itens',
            },
        ),
        migrations.CreateModel(
            name='Doacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('estado_conservacao', models.CharField(choices=[('Novo', 'Novo'), ('Usado', 'Usado'), ('Bom', 'Bom'), ('Ruim', 'Ruim')], max_length=20, verbose_name='Estado de conservação')),
                ('status', models.CharField(choices=[('Disponível', 'Disponível'), ('Doado', 'Doado')], default='Disponível', max_length=20, verbose_name='Status')),
                ('data_doacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de doação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.item', verbose_name='Item')),
            ],
            options={
                'verbose_name': 'Doação',
                'verbose_name_plural': 'Doações',
            },
        ),
        migrations.CreateModel(
            name='Necessidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField(verbose_name='Descrição')),
                ('quantidade', models.PositiveIntegerField(verbose_name='Quantidade')),
                ('aprovado_por_admin', models.BooleanField(default=False, verbose_name='Aprovado por administrador')),
                ('status', models.CharField(choices=[('Disponível', 'Disponível'), ('Doado', 'Doado')], default='Disponível', max_length=20, verbose_name='Status')),
                ('data_necessidade', models.DateTimeField(auto_now_add=True, verbose_name='Data de necessidade')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.item', verbose_name='Item')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='necessidades', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Necessidade',
                'verbose_name_plural': 'Necessidades',
            },
        ),
    ]
